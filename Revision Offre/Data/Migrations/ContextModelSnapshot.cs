// <auto-generated />
using System;
using Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Data.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Domain.Entreprise", b =>
                {
                    b.Property<int>("IdEntreprise")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ChiffreAffaire")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateFondation")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Effectif")
                        .HasColumnType("int");

                    b.Property<string>("NomEntreprise")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Secteur")
                        .HasColumnType("int");

                    b.HasKey("IdEntreprise");

                    b.ToTable("Entreprise");
                });

            modelBuilder.Entity("Domain.Offre", b =>
                {
                    b.Property<int>("IdOffre")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatePublication")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EntrepriseFK")
                        .HasColumnType("int");

                    b.Property<string>("TitreOffre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeContrat")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdOffre");

                    b.HasIndex("EntrepriseFK");

                    b.ToTable("Offre");
                });

            modelBuilder.Entity("Domain.Postulant", b =>
                {
                    b.Property<int>("IdPstulant")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateNaissance")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prenom")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdPstulant");

                    b.ToTable("Postulant");
                });

            modelBuilder.Entity("OffrePostulant", b =>
                {
                    b.Property<int>("OffresIdOffre")
                        .HasColumnType("int");

                    b.Property<int>("PostulantsIdPstulant")
                        .HasColumnType("int");

                    b.HasKey("OffresIdOffre", "PostulantsIdPstulant");

                    b.HasIndex("PostulantsIdPstulant");

                    b.ToTable("Candidature");
                });

            modelBuilder.Entity("Domain.Entreprise", b =>
                {
                    b.OwnsOne("Domain.Adresse", "AdresseEntreprise", b1 =>
                        {
                            b1.Property<int>("EntrepriseIdEntreprise")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<int>("CodePostal")
                                .HasColumnType("int");

                            b1.Property<string>("Region")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Ville")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("EntrepriseIdEntreprise");

                            b1.ToTable("Entreprise");

                            b1.WithOwner()
                                .HasForeignKey("EntrepriseIdEntreprise");
                        });

                    b.Navigation("AdresseEntreprise");
                });

            modelBuilder.Entity("Domain.Offre", b =>
                {
                    b.HasOne("Domain.Entreprise", "Entreprise")
                        .WithMany("Offres")
                        .HasForeignKey("EntrepriseFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Entreprise");
                });

            modelBuilder.Entity("OffrePostulant", b =>
                {
                    b.HasOne("Domain.Offre", null)
                        .WithMany()
                        .HasForeignKey("OffresIdOffre")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Postulant", null)
                        .WithMany()
                        .HasForeignKey("PostulantsIdPstulant")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.Entreprise", b =>
                {
                    b.Navigation("Offres");
                });
#pragma warning restore 612, 618
        }
    }
}
